image: ubuntu:16.04

stages:
  - test

variables:
  POSTGRES_DB: dbname # set database
  POSTGRES_USER: username # set username
  POSTGRES_PASSWORD: ""  

before_script:
  - apt-get update
  - apt-get install -y jq curl
  - apt-get -y upgrade
  - apt-get -y install golang-1.9-go
  - echo "export PATH=\$PATH:/usr/lib/go-1.9/bin" >> ~/.profile
  - source ~/.profile
  - apt-get -y install postgresql postgresql-contrib
  - psql --version

.test-check:
  script:
    - psql -h postgres -d dbname -U username -c "SELECT version();"
    - psql -h postgres -d dbname -U username -f .ci/test_db_dump.sql
    - ./checkup -h postgres --username username --project test --dbname dbname -e 1 > std.log 2> err.log
    - cp std.log ./artifacts/test/
    - cp err.log ./artifacts/test/
    - tar -cvf test_artifacts.tar ./artifacts/test/*
  artifacts:
    paths:
      - ./artifacts/test/json_reports
      - ./artifacts/test/e1_full_report.md
      - ./std.log
      - ./err.log
    expire_in: 1 week


test-pghrep:
  stage: test
  script:
    - cd pghrep && make test

test-check-9.6:
  extends: ".test-check"
  stage: "test"
  services:
    - postgres:9.6

test-check-10:
  extends: ".test-check"
  stage: "test"
  services:
    - postgres:10

test-check-11:
  extends: ".test-check"
  stage: "test"
  services:
    - postgres:11

test-check-cli:
  services:
    - postgres:11
  stage: "test"
  script: |
    errcount=0
    printTail="                                                                      "
    for f in tests/cli_*.sh; do
      printf "$f${printTail:0:-${#f}}"
      bash "$f" -H
      status=$?
      if [ "$status" -ne 0 ]; then
        errcount="$(($errcount+1))"
      fi
    done
    if [ "$errcount" -ne 0 ]; then
      >&2 echo "Oh no! $errcount tests failed"
      exit 1
    fi
