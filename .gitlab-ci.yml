image: ubuntu:16.04

stages:
  - test

variables:
  POSTGRES_DB: dbname # set database
  POSTGRES_USER: username # set username
  POSTGRES_PASSWORD: ""  

before_script:
  - apt-get update
  - apt-get install -y jq curl
  - apt-get -y upgrade
  - apt-get -y install golang-1.9-go
  - echo "export PATH=\$PATH:/usr/lib/go-1.9/bin" >> ~/.profile
  - source ~/.profile
  - apt-get -y install postgresql postgresql-contrib

.test-check:
  script:
    - psql --version
    - psql -h postgres -d dbname -U username -c "SELECT version();"
    - psql -h postgres -d dbname -U username -f .ci/h002.sql
    - ./check -h postgres --username username --project test --dbname dbname -e 1
    - data_dir=$(cat ./artifacts/test/nodes.json | jq -r '.last_check | .dir') && result=$(cat ./artifacts/test/json_reports/$data_dir/H002_non_indexed_fks.json | jq '.results .test .data') && echo "$result"
    #([ "$result" == "[]" ] || [ "$result" == "null" ]) && exit 1
    - psql -h postgres -d dbname -U username -f .ci/h002_step2.sql
    - rm -Rf ./artifacts/
    - ./check -h postgres --username username --project test --dbname dbname -e 1
    - data_dir=$(cat ./artifacts/test/nodes.json | jq -r '.last_check | .dir') && result=$(cat ./artifacts/test/json_reports/$data_dir/H002_non_indexed_fks.json | jq '.results .test .data') && echo "$result"
    #[ "$result" != "null" ] && exit 1

test-pghrep:
  stage: test
  script:
    - cd pghrep && make test

test-check-9.6:
  extends: ".test-check"
  stage: "test"
  services:
    - postgres:9.6

test-check-10:
  extends: ".test-check"
  stage: "test"
  services:
    - postgres:10

test-check-11:
  extends: ".test-check"
  stage: "test"
  services:
    - postgres:11
